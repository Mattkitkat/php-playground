user nginx nginx;
    worker_processes 10;
    worker_rlimit_nofile 20480;

    pid /tmp/nginx.pid;

    error_log /proc/self/fd/2 notice;

    events {
      worker_connections 4096;
      use epoll;
    }

    http {
      include mime.types;

      map $http_user_agent $blockedagent {
        default         0;
        ~*malicious     1;
        ~*bot           0;
        ~*backdoor      1;
        ~*crawler       0;
        ~*bandit        1;
      }

      map $upstream_http_strict_transport_security $custom_strict_transport_security {

          # Set the $custom_strict_transport_security variable with the original
          # response header from the upstream server if it consists
          # of at least one character (. is a regular expression)
          "~."          $upstream_http_strict_transport_security;

          # Otherwise set it with this value
          default       "max-age=63072000; includeSubDomains; preload";
      }

      map $upstream_http_x_frame_options $custom_x_frame_options {

          # Set the $custom_x_frame_options variable with the original
          # response header from the upstream server if it consists
          # of at least one character (. is a regular expression)
          "~."          $upstream_http_x_frame_options;

          # Otherwise set it with this value
          default       DENY;
      }

      map $upstream_http_x_content_type_options $custom_x_content_type_options {

          # Set the $custom_content_type_options variable with the original
          # response header from the upstream server if it consists
          # of at least one character (. is a regular expression)
          "~."          $upstream_http_x_content_type_options;

          # Otherwise set it with this value
          default       nosniff;
      }

      map $sent_http_content_type $expires {
          default                    off;
          text/html                  epoch;
          text/css                   max;
          application/javascript     7d;
          ~image/                    max;
      }

      limit_conn_zone $binary_remote_addr zone=addr:5m;
      default_type application/octet-stream;

      log_format main
        '$remote_addr - $remote_user [$time_local] '
        '"$request" $status $bytes_sent '
        '"$http_referer" "$http_user_agent" '
        '"$request_time" "$upstream_response_time" '
        '"$gzip_ratio"';

      client_header_timeout 10m;
      client_body_timeout 10m;
      send_timeout 10m;
      client_max_body_size 2048m;

      connection_pool_size 256;
      client_header_buffer_size 1k;
      large_client_header_buffers 4 2k;
      request_pool_size 4k;

      gzip on;
      gzip_disable "msie6";
      gzip_vary on;
      gzip_proxied any;
      gzip_comp_level 6;
      gzip_buffers 16 8k;
      gzip_http_version 1.1;
      gzip_types image/x-icon image/svg+xml application/javascript application/json application/x-javascript application/xml application/xml+rss text/css text/javascript text/plain text/richtext text/x-component text/xml text/xsd text/xsl;

      output_buffers 1 32k;
      postpone_output 1460;

      sendfile on;
      tcp_nopush on;
      tcp_nodelay on;

      keepalive_timeout 75 20;

      ignore_invalid_headers on;

      index index.php index.html index.htm;
      create_full_put_path on;

      client_body_temp_path /tmp/client_temp;
      proxy_temp_path       /tmp/proxy_temp_path;
      fastcgi_temp_path     /tmp/fastcgi_temp;
      uwsgi_temp_path       /tmp/uwsgi_temp;
      scgi_temp_path        /tmp/scgi_temp;

      server {
        expires $expires;

        server_tokens off;

        if ($blockedagent) {
          return 403;
        }

        if ($request_method !~ ^(GET|HEAD|POST|DELETE|PUT|PATCH|PROPFIND|MKCOL|MOVE|OPTIONS)$) {
          return 444;
        }

        client_body_buffer_size  128K;
        client_header_buffer_size 16K;
        client_max_body_size 2048m;
        large_client_header_buffers 4 16K;

        limit_conn addr 100;

        access_log /proc/self/fd/1 main;
        error_log /proc/self/fd/2;
        root /var/www/html/public;

        location ~ /\.ht {
          deny  all;
        }

        location / {
          # try to serve file directly, fallback to app.php
          try_files $uri /index.php$is_args$args;
        }

        location ~ ^/index\.php(/|$) {
          fastcgi_param HTTP_PROXY "";
          fastcgi_pass screencasts-api-platform:9000;
          fastcgi_split_path_info ^(.+\.php)(/.*)$;
          fastcgi_param   QUERY_STRING            $query_string;
          fastcgi_param   REQUEST_METHOD          $request_method;
          fastcgi_param   CONTENT_TYPE            $content_type;
          fastcgi_param   CONTENT_LENGTH          $content_length;
          fastcgi_param   SCRIPT_FILENAME         $document_root$fastcgi_script_name;
          fastcgi_param   SCRIPT_NAME             $fastcgi_script_name;
          fastcgi_param   PATH_INFO               $fastcgi_path_info;
          fastcgi_param   PATH_TRANSLATED         $document_root$fastcgi_path_info;
          fastcgi_param   REQUEST_URI             $request_uri;
          fastcgi_param   DOCUMENT_URI            $document_uri;
          fastcgi_param   DOCUMENT_ROOT           $document_root;
          fastcgi_param   SERVER_PROTOCOL         $server_protocol;
          fastcgi_param   GATEWAY_INTERFACE       CGI/1.1;
          fastcgi_param   SERVER_SOFTWARE         nginx/$nginx_version;
          fastcgi_param   REMOTE_ADDR             $remote_addr;
          fastcgi_param   REMOTE_PORT             $remote_port;
          fastcgi_param   SERVER_ADDR             $server_addr;
          fastcgi_param   SERVER_PORT             $server_port;
          fastcgi_param   SERVER_NAME             screencasts-api-platform.localhost;
          fastcgi_param   HTTPS                   $https;
          fastcgi_param   REDIRECT_STATUS         200;
          fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
          fastcgi_param DOCUMENT_ROOT $realpath_root;
          internal;
        }

        location ~ \.php$ {
          return 404;
        }
      }
    }